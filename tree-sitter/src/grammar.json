{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "flang",
  "rules": {
    "program": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "thing"
          }
        }
      ]
    },
    "thing": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "return"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "export"
                },
                {
                  "type": "SYMBOL",
                  "name": "uses"
                },
                {
                  "type": "SYMBOL",
                  "name": "expr"
                }
              ]
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "semicolon"
                },
                {
                  "type": "BLANK"
                }
              ]
            }
          ]
        }
      ]
    },
    "return": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "return"
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "semicolon"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "export": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "export"
        },
        {
          "type": "SYMBOL",
          "name": "var_decl"
        }
      ]
    },
    "uses": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "uses"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "identifier"
            },
            {
              "type": "STRING",
              "value": "*"
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "{"
                },
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "identifier"
                    },
                    {
                      "type": "REPEAT",
                      "content": {
                        "type": "SEQ",
                        "members": [
                          {
                            "type": "STRING",
                            "value": ","
                          },
                          {
                            "type": "SYMBOL",
                            "name": "identifier"
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "STRING",
                  "value": "}"
                }
              ]
            }
          ]
        },
        {
          "type": "STRING",
          "value": "from"
        },
        {
          "type": "SYMBOL",
          "name": "package"
        }
      ]
    },
    "package": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "::"
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        }
      ]
    },
    "expr": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "struct_inst"
        },
        {
          "type": "SYMBOL",
          "name": "fn_decl"
        },
        {
          "type": "SYMBOL",
          "name": "var_decl"
        },
        {
          "type": "SYMBOL",
          "name": "var_assign"
        },
        {
          "type": "SYMBOL",
          "name": "monadic"
        },
        {
          "type": "SYMBOL",
          "name": "dyadic"
        },
        {
          "type": "SYMBOL",
          "name": "terms"
        }
      ]
    },
    "struct_inst": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "lbrace"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "named_var"
                },
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "SYMBOL",
                        "name": "comma"
                      },
                      {
                        "type": "SYMBOL",
                        "name": "named_var"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "rbrace"
        }
      ]
    },
    "fn_outline": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "lparen"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "typed_args"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "rparen"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "typed"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "fn_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "fn_outline"
        },
        {
          "type": "STRING",
          "value": "=>"
        },
        {
          "type": "SYMBOL",
          "name": "block"
        }
      ]
    },
    "var_decl": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "declaration"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "typed"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "assignment"
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        }
      ]
    },
    "var_assign": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "assignment"
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        }
      ]
    },
    "monadic": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "negative"
            },
            {
              "type": "SYMBOL",
              "name": "negate"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "term"
        }
      ]
    },
    "dyadic": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "term"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "pow"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "equality"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "add"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "subtract"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "multiply"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "divide"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "or"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "and"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "gt"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "lt"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "gte"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "lte"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "term"
              }
            ]
          }
        }
      ]
    },
    "terms": {
      "type": "REPEAT1",
      "content": {
        "type": "SYMBOL",
        "name": "term"
      }
    },
    "term": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "index"
        },
        {
          "type": "SYMBOL",
          "name": "term_excl"
        }
      ]
    },
    "term_excl": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "fn_call"
        },
        {
          "type": "SYMBOL",
          "name": "literal"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "lparen"
            },
            {
              "type": "SYMBOL",
              "name": "expr"
            },
            {
              "type": "SYMBOL",
              "name": "rparen"
            }
          ]
        }
      ]
    },
    "index": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "term_excl"
        },
        {
          "type": "REPEAT1",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": "."
                  },
                  {
                    "type": "SYMBOL",
                    "name": "term"
                  }
                ]
              },
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": "["
                  },
                  {
                    "type": "SYMBOL",
                    "name": "term"
                  },
                  {
                    "type": "STRING",
                    "value": "]"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "fn_call": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "lparen"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "args"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "rparen"
        }
      ]
    },
    "args": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "expr"
            },
            {
              "type": "SYMBOL",
              "name": "identifier"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "comma"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "expr"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "identifier"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "block": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "lbrace"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "thing"
          }
        },
        {
          "type": "SYMBOL",
          "name": "rbrace"
        }
      ]
    },
    "named_var": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "colon"
        },
        {
          "type": "SYMBOL",
          "name": "expr"
        }
      ]
    },
    "typed_var": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "typed"
        }
      ]
    },
    "typed_args": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "typed_var"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "comma"
              },
              {
                "type": "SYMBOL",
                "name": "typed_var"
              }
            ]
          }
        }
      ]
    },
    "typed": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "colon"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "boolean"
        },
        {
          "type": "SYMBOL",
          "name": "null"
        }
      ]
    },
    "number": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PATTERN",
            "value": "\\d+"
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "PATTERN",
                    "value": "\\d*"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "STRING",
                "value": "."
              },
              {
                "type": "PATTERN",
                "value": "\\d+"
              }
            ]
          }
        ]
      }
    },
    "string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "IMMEDIATE_TOKEN",
                "content": {
                  "type": "PREC",
                  "value": 1,
                  "content": {
                    "type": "PATTERN",
                    "value": "[^\"\\\\]+"
                  }
                }
              },
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "escape_sequence": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[\"\\\\\\/bfnrt]"
              },
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": "u"
                  },
                  {
                    "type": "PATTERN",
                    "value": "[0-9a-fA-F]{4}"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "null": {
      "type": "STRING",
      "value": "null"
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "lparen": {
      "type": "STRING",
      "value": "("
    },
    "rparen": {
      "type": "STRING",
      "value": ")"
    },
    "lbrace": {
      "type": "STRING",
      "value": "{"
    },
    "rbrace": {
      "type": "STRING",
      "value": "}"
    },
    "comma": {
      "type": "STRING",
      "value": ","
    },
    "colon": {
      "type": "STRING",
      "value": ":"
    },
    "semicolon": {
      "type": "STRING",
      "value": ";"
    },
    "assignment": {
      "type": "STRING",
      "value": "="
    },
    "declaration": {
      "type": "STRING",
      "value": "let"
    },
    "negate": {
      "type": "STRING",
      "value": "!"
    },
    "negative": {
      "type": "STRING",
      "value": "-"
    },
    "pow": {
      "type": "STRING",
      "value": "**"
    },
    "equality": {
      "type": "STRING",
      "value": "=="
    },
    "add": {
      "type": "STRING",
      "value": "+"
    },
    "subtract": {
      "type": "STRING",
      "value": "-"
    },
    "multiply": {
      "type": "STRING",
      "value": "*"
    },
    "divide": {
      "type": "STRING",
      "value": "/"
    },
    "or": {
      "type": "STRING",
      "value": "||"
    },
    "and": {
      "type": "STRING",
      "value": "&&"
    },
    "gt": {
      "type": "STRING",
      "value": ">"
    },
    "lt": {
      "type": "STRING",
      "value": "<"
    },
    "gte": {
      "type": "STRING",
      "value": ">="
    },
    "lte": {
      "type": "STRING",
      "value": "<="
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [
    [
      "term_excl",
      "fn_call"
    ],
    [
      "dyadic",
      "terms"
    ],
    [
      "terms"
    ],
    [
      "dyadic"
    ],
    [
      "term_excl",
      "args"
    ],
    [
      "term",
      "index"
    ],
    [
      "index"
    ]
  ],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
